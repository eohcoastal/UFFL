/*
Deployment script for Moo

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Moo"
:setvar DefaultFilePrefix "Moo"
:setvar DefaultDataPath "F:\SQLServerData\"
:setvar DefaultLogPath "D:\SQLServerLog\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [uffl]...';


GO
CREATE SCHEMA [uffl]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [uffl].[UniversalReceiver]...';


GO
CREATE TABLE [uffl].[UniversalReceiver] (
    [FileRowID]      BIGINT         IDENTITY (1, 1) NOT NULL,
    [FileSchemaID]   INT            NOT NULL,
    [FileRowContent] VARCHAR (4000) NOT NULL,
    CONSTRAINT [PK_UniversalReceiver] PRIMARY KEY CLUSTERED ([FileRowID] ASC)
);


GO
PRINT N'Creating [uffl].[FileSchema]...';


GO
CREATE TABLE [uffl].[FileSchema] (
    [FileSchemaID]         INT            IDENTITY (1, 1) NOT NULL,
    [FileName]             VARCHAR (150)  NOT NULL,
    [RowsToSkipFromTop]    INT            NOT NULL,
    [RowsToSkipFromBottom] INT            NOT NULL,
    [RowIndexesToIgnore]   VARCHAR (50)   NULL,
    [ColumnDelim]          CHAR (1)       NULL,
    [FileSchema]           VARCHAR (2000) NOT NULL,
    [FileDescription]      VARCHAR (MAX)  NULL,
    CONSTRAINT [PK_FileSchema] PRIMARY KEY CLUSTERED ([FileSchemaID] ASC)
);


GO
PRINT N'Creating [uffl].[FK_UniversalReceiver_FileSchema]...';


GO
ALTER TABLE [uffl].[UniversalReceiver]
    ADD CONSTRAINT [FK_UniversalReceiver_FileSchema] FOREIGN KEY ([FileSchemaID]) REFERENCES [uffl].[FileSchema] ([FileSchemaID]);


GO
PRINT N'Creating [uffl].[tvf_DelimitedSplit8K]...';


GO
CREATE FUNCTION uffl.[tvf_DelimitedSplit8K]
/*****************************************************************************************************************************************************************************************
	Synopsis:	String splitting function written by Jeff Moden
				http://www.sqlservercentral.com/articles/Tally+Table/72993/ 

	======================================================================================================================================================================================
	Change Log
	======================================================================================================================================================================================
	ID		WHEN		WHO					TICKET						WHAT
	======================================================================================================================================================================================
	1		2018-08-31	MDiamond										Created
	======================================================================================================================================================================================

	======================================================================================================================================================================================
	Review Log
	======================================================================================================================================================================================
	ID		WHEN		WHO					WHAT
	======================================================================================================================================================================================

	======================================================================================================================================================================================

*****************************************************************************************************************************************************************************************/
--===== Define I/O parameters
(
	 @pString VARCHAR(8000)
	,@pDelimiter CHAR(1)
)
--WARNING!!! DO NOT USE MAX DATA-TYPES HERE!  IT WILL KILL PERFORMANCE!
RETURNS TABLE WITH SCHEMABINDING AS
RETURN
--===== "Inline" CTE Driven "Tally Table" produces values from 1 up to 10,000...
     -- enough to cover VARCHAR(8000)
WITH E1(N) AS 
(
	SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL
	SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL
	SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1
),                          --10E+1 or 10 rows
E2(N) AS 
(
	SELECT 1 
	FROM E1 a, E1 b
), --10E+2 or 100 rows
E4(N) AS 
(
	SELECT 1 
	FROM E2 a, E2 b
), --10E+4 or 10,000 rows max
cteTally(N) AS 
(
	--==== This provides the "base" CTE and limits the number of rows right up front
    -- for both a performance gain and prevention of accidental "overruns"
    SELECT TOP (ISNULL(DATALENGTH(@pString),0)) ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) 
	FROM E4
),
cteStart(N1) AS 
(
	--==== This returns N+1 (starting position of each "element" just once for each delimiter)
    SELECT 1 
	UNION ALL
    SELECT t.N+1 
	FROM cteTally t 
	WHERE SUBSTRING(@pString,t.N,1) = @pDelimiter
),
cteLen(N1,L1) AS
(
	--==== Return start and length (for use in substring)
    SELECT	 s.N1
			,ISNULL(NULLIF(CHARINDEX(@pDelimiter,@pString,s.N1),0)-s.N1,8000)
    FROM cteStart s
)
--===== Do the actual split. The ISNULL/NULLIF combo handles the length for the final element when no delimiter is found.
SELECT	 ItemNumber = ROW_NUMBER() OVER(ORDER BY l.N1)
        ,Item       = SUBSTRING(@pString, l.N1, l.L1)
FROM cteLen l
;
GO
PRINT N'Creating [uffl].[tvf_DelimStrToColumn]...';


GO
CREATE FUNCTION [uffl].[tvf_DelimStrToColumn]
/*****************************************************************************************************************************************************************************************
	Synopsis:	Translate delimited strings to columns
				
				Current limitations
				-	64 column limit. To add more columns find of CEILING(SQRT(n)) where n are the number of columns sought and modify the CTEs on this basis
				-	Delimiter limited to single character


	======================================================================================================================================================================================
	Change Log
	======================================================================================================================================================================================
	ID		WHEN		WHO					TICKET						WHAT
	======================================================================================================================================================================================
	1		2018-08-31	MDiamond										Created
	======================================================================================================================================================================================

	======================================================================================================================================================================================
	Review Log
	======================================================================================================================================================================================
	ID		WHEN		WHO					WHAT
	======================================================================================================================================================================================

	======================================================================================================================================================================================

*****************************************************************************************************************************************************************************************/
(
	 @InputString		VARCHAR(1500)
	,@Delimiter			CHAR(1)
)
RETURNS TABLE AS RETURN
(
	WITH Base8(n) AS
	(
			SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL
			SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL
			SELECT 1 UNION ALL SELECT 1 
	)
	,Numbers64(n) AS
	(
		SELECT CAST(ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS INT)
		FROM Base8 a, Base8 b
	)
	,Tokens AS
	(
		SELECT	 Item
				,ItemNumber
		FROM uffl.tvf_DelimitedSplit8K(@InputString, @Delimiter)
	)
	,PrePivot AS
	(
		SELECT	 BS.N
				,TK.Item
		FROM Numbers64	BS
		LEFT
		JOIN Tokens		TK	ON BS.N = TK.ItemNumber
	)
	SELECT [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64]
	FROM
	(
		SELECT	 N
				,Item 
		FROM PrePivot
	) AS SourceTable
	PIVOT
	(
		MAX(Item)
		FOR N IN ([1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64])
	) AS PivotTable
)
;
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
SET IDENTITY_INSERT [uffl].[FileSchema] ON 
GO
INSERT [uffl].[FileSchema] ([FileSchemaID], [FileName], [RowsToSkipFromTop], [RowsToSkipFromBottom], [RowIndexesToIgnore], [ColumnDelim], [FileSchema], [FileDescription]) VALUES (3, N'People.csv', 0, 0, N'1', N',', N'[{"FieldOrdinalPosition":1,"FieldName":"PersonID","FieldType":"int"},{"FieldOrdinalPosition":2,"FieldName":"FullName","FieldType":"nvarchar(50)"},{"FieldOrdinalPosition":3,"FieldName":"PreferredName","FieldType":"nvarchar(50)"},{"FieldOrdinalPosition":4,"FieldName":"SearchName","FieldType":"nvarchar(101)"},{"FieldOrdinalPosition":5,"FieldName":"IsPermittedToLogon","FieldType":"bit"},{"FieldOrdinalPosition":6,"FieldName":"LogonName","FieldType":"nvarchar(50)"},{"FieldOrdinalPosition":7,"FieldName":"IsExternalLogonProvider","FieldType":"bit"},{"FieldOrdinalPosition":8,"FieldName":"IsSystemUser","FieldType":"bit"},{"FieldOrdinalPosition":9,"FieldName":"IsEmployee","FieldType":"bit"},{"FieldOrdinalPosition":10,"FieldName":"IsSalesperson","FieldType":"bit"},{"FieldOrdinalPosition":11,"FieldName":"PhoneNumber","FieldType":"nvarchar(20)"},{"FieldOrdinalPosition":12,"FieldName":"FaxNumber","FieldType":"nvarchar(20)"},{"FieldOrdinalPosition":13,"FieldName":"EmailAddress","FieldType":"nvarchar(256)"},{"FieldOrdinalPosition":14,"FieldName":"LastEditedBy","FieldType":"int"},{"FieldOrdinalPosition":15,"FieldName":"ValidFrom","FieldType":"datetime2(7)"},{"FieldOrdinalPosition":16,"FieldName":"ValidTo","FieldType":"datetime2(7)"}]', N'CSV based on Application.People in WideWorldImporters database')
GO
SET IDENTITY_INSERT [uffl].[FileSchema] OFF
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
